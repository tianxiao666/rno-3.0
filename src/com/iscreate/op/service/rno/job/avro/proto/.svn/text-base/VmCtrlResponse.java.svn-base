/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.iscreate.op.service.rno.job.avro.proto;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class VmCtrlResponse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"VmCtrlResponse\",\"namespace\":\"com.iscreate.op.service.rno.job.avro.proto\",\"fields\":[{\"name\":\"isAccepted\",\"type\":\"boolean\"},{\"name\":\"progress\",\"type\":\"string\",\"default\":\"\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public boolean isAccepted;
  @Deprecated public java.lang.CharSequence progress;

  /**
   * Default constructor.
   */
  public VmCtrlResponse() {}

  /**
   * All-args constructor.
   */
  public VmCtrlResponse(java.lang.Boolean isAccepted, java.lang.CharSequence progress) {
    this.isAccepted = isAccepted;
    this.progress = progress;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return isAccepted;
    case 1: return progress;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: isAccepted = (java.lang.Boolean)value$; break;
    case 1: progress = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'isAccepted' field.
   */
  public java.lang.Boolean getIsAccepted() {
    return isAccepted;
  }

  /**
   * Sets the value of the 'isAccepted' field.
   * @param value the value to set.
   */
  public void setIsAccepted(java.lang.Boolean value) {
    this.isAccepted = value;
  }

  /**
   * Gets the value of the 'progress' field.
   */
  public java.lang.CharSequence getProgress() {
    return progress;
  }

  /**
   * Sets the value of the 'progress' field.
   * @param value the value to set.
   */
  public void setProgress(java.lang.CharSequence value) {
    this.progress = value;
  }

  /** Creates a new VmCtrlResponse RecordBuilder */
  public static com.iscreate.op.service.rno.job.avro.proto.VmCtrlResponse.Builder newBuilder() {
    return new com.iscreate.op.service.rno.job.avro.proto.VmCtrlResponse.Builder();
  }
  
  /** Creates a new VmCtrlResponse RecordBuilder by copying an existing Builder */
  public static com.iscreate.op.service.rno.job.avro.proto.VmCtrlResponse.Builder newBuilder(com.iscreate.op.service.rno.job.avro.proto.VmCtrlResponse.Builder other) {
    return new com.iscreate.op.service.rno.job.avro.proto.VmCtrlResponse.Builder(other);
  }
  
  /** Creates a new VmCtrlResponse RecordBuilder by copying an existing VmCtrlResponse instance */
  public static com.iscreate.op.service.rno.job.avro.proto.VmCtrlResponse.Builder newBuilder(com.iscreate.op.service.rno.job.avro.proto.VmCtrlResponse other) {
    return new com.iscreate.op.service.rno.job.avro.proto.VmCtrlResponse.Builder(other);
  }
  
  /**
   * RecordBuilder for VmCtrlResponse instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<VmCtrlResponse>
    implements org.apache.avro.data.RecordBuilder<VmCtrlResponse> {

    private boolean isAccepted;
    private java.lang.CharSequence progress;

    /** Creates a new Builder */
    private Builder() {
      super(com.iscreate.op.service.rno.job.avro.proto.VmCtrlResponse.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.iscreate.op.service.rno.job.avro.proto.VmCtrlResponse.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing VmCtrlResponse instance */
    private Builder(com.iscreate.op.service.rno.job.avro.proto.VmCtrlResponse other) {
            super(com.iscreate.op.service.rno.job.avro.proto.VmCtrlResponse.SCHEMA$);
      if (isValidValue(fields()[0], other.isAccepted)) {
        this.isAccepted = data().deepCopy(fields()[0].schema(), other.isAccepted);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.progress)) {
        this.progress = data().deepCopy(fields()[1].schema(), other.progress);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'isAccepted' field */
    public java.lang.Boolean getIsAccepted() {
      return isAccepted;
    }
    
    /** Sets the value of the 'isAccepted' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlResponse.Builder setIsAccepted(boolean value) {
      validate(fields()[0], value);
      this.isAccepted = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'isAccepted' field has been set */
    public boolean hasIsAccepted() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'isAccepted' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlResponse.Builder clearIsAccepted() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'progress' field */
    public java.lang.CharSequence getProgress() {
      return progress;
    }
    
    /** Sets the value of the 'progress' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlResponse.Builder setProgress(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.progress = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'progress' field has been set */
    public boolean hasProgress() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'progress' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlResponse.Builder clearProgress() {
      progress = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public VmCtrlResponse build() {
      try {
        VmCtrlResponse record = new VmCtrlResponse();
        record.isAccepted = fieldSetFlags()[0] ? this.isAccepted : (java.lang.Boolean) defaultValue(fields()[0]);
        record.progress = fieldSetFlags()[1] ? this.progress : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
