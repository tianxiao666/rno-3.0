/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.iscreate.op.service.rno.job.avro.proto;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class VmCtrlRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"VmCtrlRequest\",\"namespace\":\"com.iscreate.op.service.rno.job.avro.proto\",\"fields\":[{\"name\":\"cmdType\",\"type\":\"string\",\"default\":\"create\"},{\"name\":\"nodeType\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"vmName\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"nodeToken\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"cpu\",\"type\":\"int\",\"default\":\"1\"},{\"name\":\"memory\",\"type\":\"float\",\"default\":1024.0},{\"name\":\"disk\",\"type\":\"float\",\"default\":10240.0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence cmdType;
  @Deprecated public java.lang.CharSequence nodeType;
  @Deprecated public java.lang.CharSequence vmName;
  @Deprecated public java.lang.CharSequence nodeToken;
  @Deprecated public int cpu;
  @Deprecated public float memory;
  @Deprecated public float disk;

  /**
   * Default constructor.
   */
  public VmCtrlRequest() {}

  /**
   * All-args constructor.
   */
  public VmCtrlRequest(java.lang.CharSequence cmdType, java.lang.CharSequence nodeType, java.lang.CharSequence vmName, java.lang.CharSequence nodeToken, java.lang.Integer cpu, java.lang.Float memory, java.lang.Float disk) {
    this.cmdType = cmdType;
    this.nodeType = nodeType;
    this.vmName = vmName;
    this.nodeToken = nodeToken;
    this.cpu = cpu;
    this.memory = memory;
    this.disk = disk;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return cmdType;
    case 1: return nodeType;
    case 2: return vmName;
    case 3: return nodeToken;
    case 4: return cpu;
    case 5: return memory;
    case 6: return disk;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: cmdType = (java.lang.CharSequence)value$; break;
    case 1: nodeType = (java.lang.CharSequence)value$; break;
    case 2: vmName = (java.lang.CharSequence)value$; break;
    case 3: nodeToken = (java.lang.CharSequence)value$; break;
    case 4: cpu = (java.lang.Integer)value$; break;
    case 5: memory = (java.lang.Float)value$; break;
    case 6: disk = (java.lang.Float)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'cmdType' field.
   */
  public java.lang.CharSequence getCmdType() {
    return cmdType;
  }

  /**
   * Sets the value of the 'cmdType' field.
   * @param value the value to set.
   */
  public void setCmdType(java.lang.CharSequence value) {
    this.cmdType = value;
  }

  /**
   * Gets the value of the 'nodeType' field.
   */
  public java.lang.CharSequence getNodeType() {
    return nodeType;
  }

  /**
   * Sets the value of the 'nodeType' field.
   * @param value the value to set.
   */
  public void setNodeType(java.lang.CharSequence value) {
    this.nodeType = value;
  }

  /**
   * Gets the value of the 'vmName' field.
   */
  public java.lang.CharSequence getVmName() {
    return vmName;
  }

  /**
   * Sets the value of the 'vmName' field.
   * @param value the value to set.
   */
  public void setVmName(java.lang.CharSequence value) {
    this.vmName = value;
  }

  /**
   * Gets the value of the 'nodeToken' field.
   */
  public java.lang.CharSequence getNodeToken() {
    return nodeToken;
  }

  /**
   * Sets the value of the 'nodeToken' field.
   * @param value the value to set.
   */
  public void setNodeToken(java.lang.CharSequence value) {
    this.nodeToken = value;
  }

  /**
   * Gets the value of the 'cpu' field.
   */
  public java.lang.Integer getCpu() {
    return cpu;
  }

  /**
   * Sets the value of the 'cpu' field.
   * @param value the value to set.
   */
  public void setCpu(java.lang.Integer value) {
    this.cpu = value;
  }

  /**
   * Gets the value of the 'memory' field.
   */
  public java.lang.Float getMemory() {
    return memory;
  }

  /**
   * Sets the value of the 'memory' field.
   * @param value the value to set.
   */
  public void setMemory(java.lang.Float value) {
    this.memory = value;
  }

  /**
   * Gets the value of the 'disk' field.
   */
  public java.lang.Float getDisk() {
    return disk;
  }

  /**
   * Sets the value of the 'disk' field.
   * @param value the value to set.
   */
  public void setDisk(java.lang.Float value) {
    this.disk = value;
  }

  /** Creates a new VmCtrlRequest RecordBuilder */
  public static com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder newBuilder() {
    return new com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder();
  }
  
  /** Creates a new VmCtrlRequest RecordBuilder by copying an existing Builder */
  public static com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder newBuilder(com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder other) {
    return new com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder(other);
  }
  
  /** Creates a new VmCtrlRequest RecordBuilder by copying an existing VmCtrlRequest instance */
  public static com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder newBuilder(com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest other) {
    return new com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder(other);
  }
  
  /**
   * RecordBuilder for VmCtrlRequest instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<VmCtrlRequest>
    implements org.apache.avro.data.RecordBuilder<VmCtrlRequest> {

    private java.lang.CharSequence cmdType;
    private java.lang.CharSequence nodeType;
    private java.lang.CharSequence vmName;
    private java.lang.CharSequence nodeToken;
    private int cpu;
    private float memory;
    private float disk;

    /** Creates a new Builder */
    private Builder() {
      super(com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing VmCtrlRequest instance */
    private Builder(com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest other) {
            super(com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.SCHEMA$);
      if (isValidValue(fields()[0], other.cmdType)) {
        this.cmdType = data().deepCopy(fields()[0].schema(), other.cmdType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nodeType)) {
        this.nodeType = data().deepCopy(fields()[1].schema(), other.nodeType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.vmName)) {
        this.vmName = data().deepCopy(fields()[2].schema(), other.vmName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.nodeToken)) {
        this.nodeToken = data().deepCopy(fields()[3].schema(), other.nodeToken);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.cpu)) {
        this.cpu = data().deepCopy(fields()[4].schema(), other.cpu);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.memory)) {
        this.memory = data().deepCopy(fields()[5].schema(), other.memory);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.disk)) {
        this.disk = data().deepCopy(fields()[6].schema(), other.disk);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'cmdType' field */
    public java.lang.CharSequence getCmdType() {
      return cmdType;
    }
    
    /** Sets the value of the 'cmdType' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder setCmdType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.cmdType = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'cmdType' field has been set */
    public boolean hasCmdType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'cmdType' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder clearCmdType() {
      cmdType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'nodeType' field */
    public java.lang.CharSequence getNodeType() {
      return nodeType;
    }
    
    /** Sets the value of the 'nodeType' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder setNodeType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.nodeType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'nodeType' field has been set */
    public boolean hasNodeType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'nodeType' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder clearNodeType() {
      nodeType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'vmName' field */
    public java.lang.CharSequence getVmName() {
      return vmName;
    }
    
    /** Sets the value of the 'vmName' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder setVmName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.vmName = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'vmName' field has been set */
    public boolean hasVmName() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'vmName' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder clearVmName() {
      vmName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'nodeToken' field */
    public java.lang.CharSequence getNodeToken() {
      return nodeToken;
    }
    
    /** Sets the value of the 'nodeToken' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder setNodeToken(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.nodeToken = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'nodeToken' field has been set */
    public boolean hasNodeToken() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'nodeToken' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder clearNodeToken() {
      nodeToken = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'cpu' field */
    public java.lang.Integer getCpu() {
      return cpu;
    }
    
    /** Sets the value of the 'cpu' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder setCpu(int value) {
      validate(fields()[4], value);
      this.cpu = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'cpu' field has been set */
    public boolean hasCpu() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'cpu' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder clearCpu() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'memory' field */
    public java.lang.Float getMemory() {
      return memory;
    }
    
    /** Sets the value of the 'memory' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder setMemory(float value) {
      validate(fields()[5], value);
      this.memory = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'memory' field has been set */
    public boolean hasMemory() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'memory' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder clearMemory() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'disk' field */
    public java.lang.Float getDisk() {
      return disk;
    }
    
    /** Sets the value of the 'disk' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder setDisk(float value) {
      validate(fields()[6], value);
      this.disk = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'disk' field has been set */
    public boolean hasDisk() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'disk' field */
    public com.iscreate.op.service.rno.job.avro.proto.VmCtrlRequest.Builder clearDisk() {
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public VmCtrlRequest build() {
      try {
        VmCtrlRequest record = new VmCtrlRequest();
        record.cmdType = fieldSetFlags()[0] ? this.cmdType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.nodeType = fieldSetFlags()[1] ? this.nodeType : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.vmName = fieldSetFlags()[2] ? this.vmName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.nodeToken = fieldSetFlags()[3] ? this.nodeToken : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.cpu = fieldSetFlags()[4] ? this.cpu : (java.lang.Integer) defaultValue(fields()[4]);
        record.memory = fieldSetFlags()[5] ? this.memory : (java.lang.Float) defaultValue(fields()[5]);
        record.disk = fieldSetFlags()[6] ? this.disk : (java.lang.Float) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
